{
  "swagger" : "2.0",
  "info" : {
    "version" : "2024-09-29T15:25:19Z",
    "title" : "Events Api Gateway"
  },
  "host" : "gtw-events-api.aws-hosting-strategies.com",
  "basePath" : "/v2",
  "schemes" : [ "https" ],
  "paths" : {
    "/events-api/events" : {
      "get" : {
        "operationId" : "GetEvents",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Events"
            },
            "headers" : {
              "X-Api-Version" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "type" : "http",
          "httpMethod" : "GET",
          "uri" : "http://ec2.aws-hosting-strategies.com:8081/api/events",
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.X-Api-Version" : "stageVariables.VERSION"
              }
            }
          },
          "requestParameters" : {
            "integration.request.header.Authorization" : "method.request.header.Authorization",
            "integration.request.header.Content-Type" : "method.request.header.Content-Type"
          },
          "passthroughBehavior" : "when_no_templates",
          "timeoutInMillis" : 29000
        }
      },
      "post" : {
        "operationId" : "AddEvents",
        "parameters" : [ {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response",
            "headers" : {
              "X-Api-Version" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "type" : "http",
          "httpMethod" : "POST",
          "uri" : "http://ec2.aws-hosting-strategies.com:8081/api/events",
          "responses" : {
            "default" : {
              "statusCode" : "204",
              "responseParameters" : {
                "method.response.header.X-Api-Version" : "stageVariables.VERSION"
              }
            }
          },
          "requestParameters" : {
            "integration.request.header.Authorization" : "method.request.header.Authorization",
            "integration.request.header.Content-Type" : "method.request.header.Content-Type"
          },
          "passthroughBehavior" : "when_no_templates",
          "timeoutInMillis" : 29000
        }
      }
    },
    "/events-api/events/{eventId}" : {
      "get" : {
        "operationId" : "GetEventById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "eventId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Event"
            },
            "headers" : {
              "X-Api-Version" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "type" : "http",
          "httpMethod" : "GET",
          "uri" : "http://ec2.aws-hosting-strategies.com:8081/api/events/{eventId}",
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.X-Api-Version" : "stageVariables.VERSION"
              }
            }
          },
          "requestParameters" : {
            "integration.request.path.eventId" : "method.request.path.eventId",
            "integration.request.header.Authorization" : "method.request.header.Authorization",
            "integration.request.header.Content-Type" : "method.request.header.Content-Type"
          },
          "passthroughBehavior" : "when_no_templates",
          "timeoutInMillis" : 29000
        }
      },
      "put" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "eventId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "SubscribeEvent",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SubscribeEvent"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Event"
            },
            "headers" : {
              "X-Api-Version" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "type" : "http",
          "httpMethod" : "PUT",
          "uri" : "http://ec2.aws-hosting-strategies.com:8081/api/events/{eventId}/subscribe",
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.X-Api-Version" : "stageVariables.VERSION"
              }
            }
          },
          "requestParameters" : {
            "integration.request.path.eventId" : "method.request.path.eventId",
            "integration.request.header.Authorization" : "method.request.header.Authorization",
            "integration.request.header.Content-Type" : "method.request.header.Content-Type"
          },
          "requestTemplates" : {
            "application/json" : "{\r\n  \"type\" : \"object\",\r\n  \"properties\" : {\r\n    \"id\" : {\r\n      \"type\" : \"integer\"\r\n    },\r\n    \"title\" : {\r\n      \"type\" : \"string\"\r\n    },\r\n    \"content\" : {\r\n      \"type\" : \"string\"\r\n    },\r\n    \"speaker\" : {\r\n      \"type\" : \"string\"\r\n    },\r\n    \"date\" : {\r\n      \"type\" : \"string\"\r\n    },\r\n    \"subscribed\" : {\r\n      \"type\" : \"boolean\"\r\n    }\r\n  }\r\n}"
          },
          "passthroughBehavior" : "never"
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "eventId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response",
            "headers" : {
              "X-Api-Version" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "type" : "http",
          "httpMethod" : "DELETE",
          "uri" : "http://ec2.aws-hosting-strategies.com:8081/api/events/{eventId}",
          "responses" : {
            "default" : {
              "statusCode" : "204",
              "responseParameters" : {
                "method.response.header.X-Api-Version" : "stageVariables.VERSION"
              }
            }
          },
          "requestParameters" : {
            "integration.request.path.eventId" : "method.request.path.eventId",
            "integration.request.header.Authorization" : "method.request.header.Authorization",
            "integration.request.header.Content-Type" : "method.request.header.Content-Type"
          },
          "passthroughBehavior" : "when_no_templates"
        }
      }
    },
    "/token-api/lambda-token" : {
      "post" : {
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response"
          },
          "400" : {
            "description" : "400 response"
          },
          "401" : {
            "description" : "401 response"
          }
        },
        "x-amazon-apigateway-integration" : {
          "type" : "aws",
          "credentials" : "arn:aws:iam::992382569486:role/udemy_execution_role",
          "httpMethod" : "POST",
          "uri" : "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:992382569486:function:TokenGeneratorLambda/invocations",
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseTemplates" : {
                "application/json" : "#if ($input.path('$.statusCode') == 401)\n    #set($context.responseOverride.status = 401)\n#elseif ($input.path('$.statusCode') == 400)\n    #set($context.responseOverride.status = 400)\n#else\n    #set($context.responseOverride.status = 200)\n#end\n$input.path('$.body')"
              }
            }
          },
          "requestParameters" : {
            "integration.request.header.Content-Type" : "method.request.header.Content-Type"
          },
          "passthroughBehavior" : "when_no_templates",
          "timeoutInMillis" : 29000,
          "contentHandling" : "CONVERT_TO_TEXT"
        }
      }
    },
    "/token-api/token" : {
      "post" : {
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "type" : "http",
          "httpMethod" : "POST",
          "uri" : "http://ec2.aws-hosting-strategies.com:8080/api/token",
          "responses" : {
            "default" : {
              "statusCode" : "200"
            }
          },
          "passthroughBehavior" : "when_no_match"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Empty"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "type" : "mock",
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "{\"statusCode\": 200}"
          },
          "passthroughBehavior" : "when_no_match"
        }
      }
    }
  },
  "definitions" : {
    "Empty" : {
      "type" : "object",
      "title" : "Empty Schema"
    },
    "SubscribeEvent" : {
      "type" : "object",
      "properties" : {
        "timeout" : {
          "type" : "number"
        }
      }
    },
    "Events" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Event"
      }
    },
    "Event" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer"
        },
        "title" : {
          "type" : "string"
        },
        "content" : {
          "type" : "string"
        },
        "speaker" : {
          "type" : "string"
        },
        "date" : {
          "type" : "string"
        },
        "subscribed" : {
          "type" : "boolean"
        }
      }
    }
  }
}